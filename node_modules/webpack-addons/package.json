{
  "_args": [
    [
      {
        "raw": "webpack-addons@^1.1.5",
        "scope": null,
        "escapedName": "webpack-addons",
        "name": "webpack-addons",
        "rawSpec": "^1.1.5",
        "spec": ">=1.1.5 <2.0.0",
        "type": "range"
      },
      "/Users/ebui91/Projects/react-without-cra/node_modules/webpack-cli"
    ]
  ],
  "_from": "webpack-addons@>=1.1.5 <2.0.0",
  "_id": "webpack-addons@1.1.5",
  "_inCache": true,
  "_location": "/webpack-addons",
  "_nodeVersion": "8.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/webpack-addons-1.1.5.tgz_1513531132457_0.04111521574668586"
  },
  "_npmUser": {
    "name": "ev1stensberg",
    "email": "evenstensberg@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {
    "arr-flatten": "1.1.0",
    "async": "1.5.2",
    "babel-plugin-transform-flow-strip-types": "6.22.0",
    "babel-preset-es2015": "6.24.1",
    "babel-preset-stage-1": "6.24.1",
    "babel-register": "6.26.0",
    "babylon": "6.18.0",
    "colors": "1.2.1",
    "esprima": "4.0.0",
    "expand-range": "1.8.2",
    "filename-regex": "2.0.1",
    "flow-parser": "0.68.0",
    "is-buffer": "1.1.6",
    "is-posix-bracket": "0.1.1",
    "lodash": "4.17.5",
    "node-dir": "0.1.8",
    "nomnom": "1.8.1",
    "normalize-path": "2.1.1",
    "object.omit": "2.0.1",
    "parse-glob": "3.0.4",
    "preserve": "0.2.0",
    "private": "0.1.8",
    "regex-cache": "0.4.4",
    "repeat-element": "1.1.2",
    "temp": "0.8.3",
    "write-file-atomic": "1.3.4"
  },
  "_requested": {
    "raw": "webpack-addons@^1.1.5",
    "scope": null,
    "escapedName": "webpack-addons",
    "name": "webpack-addons",
    "rawSpec": "^1.1.5",
    "spec": ">=1.1.5 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/webpack-cli"
  ],
  "_resolved": "https://registry.npmjs.org/webpack-addons/-/webpack-addons-1.1.5.tgz",
  "_shasum": "2b178dfe873fb6e75e40a819fa5c26e4a9bc837a",
  "_shrinkwrap": null,
  "_spec": "webpack-addons@^1.1.5",
  "_where": "/Users/ebui91/Projects/react-without-cra/node_modules/webpack-cli",
  "author": "",
  "bugs": {
    "url": "https://github.com/webpack-contrib/webpack-addons/issues"
  },
  "dependencies": {
    "jscodeshift": "^0.4.0"
  },
  "description": "Utility suite for webpack-cli",
  "devDependencies": {
    "babel-eslint": "^7.2.3",
    "babel-jest": "^19.0.0",
    "eslint": "^3.19.0",
    "eslint-plugin-node": "^4.2.2",
    "jest": "^19.0.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-MGO0nVniCLFAQz1qv22zM02QPjcpAoJdy7ED0i3Zy7SY1IecgXCm460ib7H/Wq7e9oL5VL6S2BxaObxwIcag0g==",
    "shasum": "2b178dfe873fb6e75e40a819fa5c26e4a9bc837a",
    "tarball": "https://registry.npmjs.org/webpack-addons/-/webpack-addons-1.1.5.tgz"
  },
  "gitHead": "18952cfcb19f95c2f5c9bff1c9c3ba6f141445ac",
  "homepage": "https://github.com/webpack-contrib/webpack-addons#readme",
  "keywords": [
    "scaffold",
    "cli",
    "webpack",
    "ast"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ev1stensberg",
      "email": "evenstensberg@gmail.com"
    }
  ],
  "name": "webpack-addons",
  "optionalDependencies": {},
  "readme": "# webpack-addons\n\n[![Build Status](https://travis-ci.org/webpack-contrib/webpack-addons.svg?branch=master)](https://travis-ci.org/webpack-contrib/webpack-addons)\n\nThis is the utility suite for creating a webpack `addon`. It contains utility functions to assist with inquirer prompting and scaffolding.\n\n# API\n\n## parseValue  \n\nParam: `String`\n\nUsed when you cannot use regular conventions. Handy for examples like `RegExp` or `output.sourcePrefix`\n\n```js\nconst parseValue = require('webpack-addons').parseValue;\n\nthis.configuration.myScaffold.webpackOptions.output.sourcePrefix = parseValue('\\t')\n// sourcePrefix: '\\t'\n```\n## createArrowFunction\n\nParam: `String`\n\nGenerally used when dealing with an entry point as an arrow function.\n\n```js\nconst createArrowFunction = require('webpack-addons').createArrowFunction;\n\nthis.configuration.myScaffold.webpackOptions.entry = createArrowFunction('app.js')\n// entry: () => 'app.js'\n```\n\n## createRegularFunction\n\nParam: `String`\n\nUsed when creating a function that returns a single value.\n```js\nconst createRegularFunction = require('webpack-addons').createRegularFunction;\n\nthis.configuration.myScaffold.webpackOptions.entry = createRegularFunction('app.js')\n// entry: function() { return 'app.js' }\n```\n## createDynamicPromise\n\nParam: `Array` | `String`\n\nUsed to create an dynamic entry point.\n\n```js\nconst createDynamicPromise = require('webpack-addons').createDynamicPromise;\n\nthis.confguration.myScaffold.webpackOptions.entry = createDynamicPromise('app.js')\n// entry: () => new Promise((resolve) => resolve('app.js'))\n\nthis.configuration.myScaffold.webpackOptions.entry = createDynamicPromise(['app.js', 'index.js'])\n// entry: () => new Promise((resolve) => resolve(['app.js','index.js']))\n```\n\n## createAssetFilterFunction\n\nParam: `String`\n\nUsed to create an [assetFilterFunction](https://webpack.js.org/configuration/performance/#performance-assetfilter)\n\n```js\nconst createAssetFilterFunction = require('webpack-addons').createAssetFilterFunction;\n\nthis.configuration.myScaffold.webpackOptions.performance.assetFilter = createAssetFilterFunction('js')\n// assetFilter: function (assetFilename) { return assetFilename.endsWith('.js'); }\n```\n\n## createExternalFunction\n\nParam: `String`\n\nUsed to create an [general function from Externals](https://webpack.js.org/configuration/externals/#function)\n\n```js\nconst createExternalFunction = require('webpack-addons').createExternalFunction;\n\nthis.configuration.myScaffold.webpackOptions.externals = [createExternalFunction('^yourregex$')]\n/*\nexternals: [\n  function(context, request, callback) {\n    if (/^yourregex$/.test(request)){\n      return callback(null, 'commonjs ' + request);\n    }\n    callback();\n  }\n\n*/\n```\n## createCommonsChunkPlugin\n\nParam: `String`\n\nUsed to create a general [`CommonsChunkPlugin`](https://webpack.js.org/plugins/commons-chunk-plugin/).\n\n```js\nconst createCommonsChunkPlugin = require('webpack-addons').createCommonsChunkPlugin;\n\nthis.configuration.myScaffold.webpackOptions.plugins = [createCommonsChunkPlugin('vendor')]\n/*\nplugins: [\n new webpack.optimize.CommonsChunkPlugin({\n    name: 'vendor',\n    filename: 'vendor-[hash].min.js',\n  })\n*/\n```\n\n## createRequire\n\nParam: `String`\n\nUsed to create a module in `topScope`\n\n```js\nconst createRequire = require('webpack-addons').createRequire;\n\nthis.configuration.myScaffold.topScope = [createRequire('webpack')]\n// const webpack = require('webpack')\n```\n\n## [Inquirer](https://github.com/SBoudrias/Inquirer.js/#prompt-types)\n\n### List\n\nParam: `name<String>, message<String>, choices<Array>`\n\nCreates a List from Inquirer\n```js\nList('entry', 'what kind of entry do you want?', ['Array', 'Function'])\n```\n\n### RawList \n\nParam: `name<String>, message<String>, choices<Array>`\n\nCreates a RawList from Inquirer\n```js\nRawList('entry', 'what kind of entry do you want?', ['Array', 'Function'])\n```\n\n### CheckList\n\nParam: `name<String>, message<String>, choices<Array>`\n\nCreates a CheckList(`checkbox`) from Inquirer\n```js\nCheckList('entry', 'what kind of entry do you want?', ['Array', 'Function'])\n```\n\n### Input \n\nParam: `name<String>, message<String>`\n\nCreates an Input from Inquirer\n```js\nInput('entry', 'what is your entry point?')\n```\n\n### InputValidate\n\nParam: `name<String>, message<String>, validate<Function>`\n\nCreates an Input from Inquirer\n```js\nconst validation = (value) => {\n    if(value.length > 4) {\n        return true;\n    } else {\n        return 'Wow, that was short!'\n    }\n}\nInput('entry', 'what is your entry point?', validation)\n```\n\n### Confirm\n\nParam: `name<String>, message<String>`\n\nCreates an Input from Inquirer\n```js\nConfirm('contextConfirm', 'Is this your context?')\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack-contrib/webpack-addons.git"
  },
  "scripts": {
    "lint": "eslint .",
    "test": "jest --coverage"
  },
  "version": "1.1.5"
}
