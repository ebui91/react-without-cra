{
  "_args": [
    [
      {
        "raw": "p-lazy@^1.0.0",
        "scope": null,
        "escapedName": "p-lazy",
        "name": "p-lazy",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/ebui91/Projects/react-without-cra/node_modules/webpack-cli"
    ]
  ],
  "_from": "p-lazy@>=1.0.0 <2.0.0",
  "_id": "p-lazy@1.0.0",
  "_inCache": true,
  "_location": "/p-lazy",
  "_nodeVersion": "4.6.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/p-lazy-1.0.0.tgz_1478510599877_0.9282662672922015"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "2.15.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "p-lazy@^1.0.0",
    "scope": null,
    "escapedName": "p-lazy",
    "name": "p-lazy",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/webpack-cli"
  ],
  "_resolved": "https://registry.npmjs.org/p-lazy/-/p-lazy-1.0.0.tgz",
  "_shasum": "ec53c802f2ee3ac28f166cc82d0b2b02de27a835",
  "_shrinkwrap": null,
  "_spec": "p-lazy@^1.0.0",
  "_where": "/Users/ebui91/Projects/react-without-cra/node_modules/webpack-cli",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/p-lazy/issues"
  },
  "dependencies": {},
  "description": "Create a lazy promise that defers execution until `.then()` or `.catch()` is called",
  "devDependencies": {
    "ava": "*",
    "delay": "^1.3.1",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "ec53c802f2ee3ac28f166cc82d0b2b02de27a835",
    "tarball": "https://registry.npmjs.org/p-lazy/-/p-lazy-1.0.0.tgz"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "9d240009f7ecc2217889304e7cfe4f21d985e442",
  "homepage": "https://github.com/sindresorhus/p-lazy#readme",
  "keywords": [
    "promise",
    "lazy",
    "defer",
    "deferred",
    "then",
    "catch",
    "fulfilled",
    "async",
    "function",
    "await",
    "promises",
    "bluebird"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "p-lazy",
  "optionalDependencies": {},
  "readme": "# p-lazy [![Build Status](https://travis-ci.org/sindresorhus/p-lazy.svg?branch=master)](https://travis-ci.org/sindresorhus/p-lazy)\n\n> Create a lazy promise that defers execution until `.then()` or `.catch()` is called\n\nUseful if you're doing some heavy operations and would like to only do it when the promise is actually used.\n\n\n## Install\n\n```\n$ npm install --save p-lazy\n```\n\n\n## Usage\n\n```js\nconst PLazy = require('p-lazy');\n\nconst lazyPromise = new PLazy(resolve => {\n\tsomeHeavyOperation(resolve);\n});\n\n// `someHeavyOperation` is not yet called\n\ndoSomethingFun.then(() => {\n\t// `someHeavyOperation` is called\n\tlazyPromise.then(console.log);\n});\n```\n\n\n## API\n\n### new PLazy(executor)\n\nSame as the [`Promise` constructor](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise). `PLazy` is a subclass of `Promise`.\n\n### PLazy.from(fn)\n\nCreate a `PLazy` promise from a promise-returning or async function.\n\n\n## Related\n\n- [p-defer](https://github.com/sindresorhus/p-defer) - Create a deferred promise\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/p-lazy.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "1.0.0",
  "xo": {
    "esnext": true
  }
}
